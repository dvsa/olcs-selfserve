<project name="OLCS Selfserve/SSWEB" default="build">

    <basename property="tar-file" file="${basedir}"/>

    <target name="composer-init" description="Perform syntax check of sourcecode files">
        <condition property="composer.url" value="http://getcomposer.org">
            <isreachable host="getcomposer.org" timeout="2" />
        </condition>
        <condition property="composer.url" value="http://satis.inf.mgt.mtpdvsa">
            <isreachable host="satis.inf.mgt.mtpdvsa" timeout="2" />
        </condition>
        <!--For AWS-->
        <!--<condition property="composer.url" value="http://satis.inf.mgt.mtpdvsa">-->
            <!--<isreachable host="satis.inf.mgt.mtpdvsa" timeout="2" />-->
        <!--</condition>-->
        <get src="${composer.url}/composer.phar" dest="composer.phar"/>
    </target>

    <target name="lint" description="Perform syntax check of sourcecode files">
        <apply executable="php" failonerror="true">
            <arg value="-l"/>

            <fileset dir=".">
                <include name="**/*.php"/>
                <exclude name="vendor/**"/>
            </fileset>
        </apply>
    </target>

    <target name="clean" description="Clean (remove) temporary files">
        <delete file="data/autoload/classmap.php"/>
        <delete>
            <fileset dir="data/cache" includes="**"/>
        </delete>
    </target>

    <target name="unittest" description="Run unit tests">
        <exec executable="vendor/bin/phpunit" dir="." failonerror="true">
            <arg value="-ctest/phpunit.xml"/>
        </exec>
    </target>

    <target name="composer-install" depends="composer-init" description="Install composer dependencies">
        <!-- THIS IS TEMPORARY SHOULD BE "INSTALL" NOT "UPDATED" -->
        <!-- Need a condition to do update if no composer.lock else do install -->
        <exec executable="php" failonerror="true">
            <arg value="composer.phar"/>
            <arg value="update"/>
            <arg value="--optimize-autoloader"/>
            <arg value="--no-interaction"/>
        </exec>
    </target>

    <target name="composer-install-nodev" depends="composer-init" description="Install composer dependencies exclude dev dependencies">
        <exec executable="php" failonerror="true">
            <arg value="composer.phar"/>
            <arg value="install"/>
            <arg value="--optimize-autoloader"/>
            <arg value="--no-dev"/>
            <arg value="--no-interaction"/>
        </exec>
    </target>

    <target name="build" description="Build for production" depends="clean, lint, composer-install, unittest, composer-install-nodev, write-info" />

    <target name="tar" description="Create tar.gz file" depends="build">
        <exec executable="tar" failonerror="true">
            <arg value="-czf${tar-file}.tar.gz"/>
            <arg value="--exclude=config/autoload/local.php"/>
            <arg value="--exclude=config/autoload/local.php.dist"/>
            <arg line="composer.lock init_autoloader.php config module public data/autoload data/cache vendor"/>
        </exec>
    </target>

    <target name="write-info" description="Write build info to a file">
        <condition property="version-file" value="${basedir}/config/version" else="${basedir}/version">
            <available file="${basedir}/config" />
        </condition>
        <exec executable="git" output="${version-file}" failonerror="true">
            <arg line="describe"/>
        </exec>
        <exec executable="date" output="${version-file}" append="true" failonerror="true">
        </exec>
    </target>
</project>
